---
- name: Download Kafka
  ansible.builtin.get_url:
    url: "{{ kafka_url }}"
    dest: /tmp/{{ kafka_archive }}.tar.gz
    checksum: "{{ kafka_checksum }}"
    mode: 0644

- name: Create Kafka group
  ansible.builtin.group:
    name: "{{ kafka_group }}"
    system: true
    state: present
  notify:
    - Restart Kafka

- name: Create Kafka user
  ansible.builtin.user:
    name: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    create_home: false
    system: true
    state: present
  notify:
    - Restart Kafka

- name: Create Kafka log directory
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: 0750
  loop: "{{ kafka_log_dirs }}"

- name: Unarchive Kafka download
  ansible.builtin.unarchive:
    src: /tmp/{{ kafka_archive }}.tar.gz
    dest: /opt
    remote_src: true
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    creates: /opt/{{ kafka_archive }}
  notify:
    - Restart Kafka

- name: Create Kafka symlink
  ansible.builtin.file:
    src: /opt/{{ kafka_archive }}
    dest: /opt/kafka
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    state: link
  notify:
    - Restart Kafka

- name: Set Kafka user home
  ansible.builtin.user:
    name: "{{ kafka_user }}"
    home: /opt/kafka
    state: present
  notify:
    - Restart Kafka

- name: Copy Kafka server.properties
  ansible.builtin.template:
    src: server.properties.j2
    dest: /opt/kafka/config/server.properties
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: 0644
  notify:
    - Restart Kafka

- name: Copy Kafka environment
  ansible.builtin.template:
    src: kafka.env.j2
    dest: /opt/kafka/config/kafka.env
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: 0644
  notify:
    - Restart Kafka

- name: Copy Kafka log4j config
  ansible.builtin.template:
    src: log4j.properties.j2
    dest: /opt/kafka/config/{{ item }}
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: 0644
  loop:
    - log4j.properties
    - connect-log4j.properties
    - tools-log4j.properties
  notify:
    - Restart Kafka

- name: Format Kafka log directories
  ansible.builtin.command:
    argv:
      - "/opt/kafka/bin/kafka-storage.sh"
      - "format"
      - "-t"
      - "{{ kafka_cluster_id }}"
      - "-c"
      - "/opt/kafka/config/server.properties"
      - "--ignore-formatted"
    creates: "{{ kafka_log_dirs[0] }}/meta.properties"
  become: true
  become_user: kafka

- name: Download JMX exporter
  ansible.builtin.get_url:
    url: "{{ jmx_exporter_url }}"
    dest: /opt/kafka/libs/{{ jmx_exporter_archive }}.jar
    checksum: "{{ jmx_exporter_checksum }}"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: 0644
  notify:
    - Restart Kafka

- name: Copy JMX exporter config
  ansible.builtin.template:
    src: jmx_exporter.yaml.j2
    dest: /opt/kafka/config/jmx_exporter.yaml
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: 0644
  notify:
    - Restart Kafka

- name: Copy Kafka systemd service
  ansible.builtin.template:
    src: kafka.service.j2
    dest: /usr/lib/systemd/system/kafka.service
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart Kafka

- name: Flush handlers to prevent restart after start
  ansible.builtin.meta: flush_handlers

- name: Start Kafka
  ansible.builtin.systemd:
    name: kafka
    state: started
    daemon_reload: true
    enabled: true

- name: Setup kafka exporter
  ansible.builtin.include_tasks: "exporter.yml"
